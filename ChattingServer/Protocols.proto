package Protocols;

enum PacketType
{
	ENTER_CHANNEL		= 1;
	CREATE_ROOM			= 3;
	CHANGE_CHANNEL		= 4;
	NOTIFY_ENTER_ROOM	= 5;
	NOTIFY_LEAVE_ROOM	= 6;
	NOTIFY_EXIST_ROOM	= 7;
	ROOM_CHATTING		= 8;
	ENTER_ROOM			= 9;
	ROOM_LIST			= 10;
	CHANNEL_CHATTING	= 11;
	LEAVE_ROOM			= 12;
}

message Enter_Channel
{
	optional int32 id				= 1;
	required int32 channelIndex		= 2;
	optional int32 type				= 3;
}

message Change_Channel
{
	optional int32 id				= 1;
	required int32 channelIndex		= 2;
	optional int32 type				= 3;
}

message Channel_Chatting
{
	optional int32 id				= 1;
	required string message			= 2;
	optional int32 type				= 3;
}

message Create_Room
{
	optional int32 id			= 1;
	required int32 roomIndex	= 2;
	optional int32 type			= 3;
}

message Room_Chatting
{
	optional int32 id			= 1;
	required string message		= 2;
	optional int32 type			= 3;
}

message Enter_Room
{
	optional int32 id			= 1;
	required int32 roomIndex	= 2;
	optional bool  isEnter		= 3;
	optional int32 type			= 4;
}

message Leave_Room
{
	optional int32 id			= 1;
	required int32 roomIndex	= 2;
	optional int32 type			= 3;
}

message Notify_Exist_Room
{
	optional int32 id			= 1;
	required int32 roomIndex	= 2;
	optional bool  exist		= 3;
	optional int32 type			= 4;
}

message Notify_Enter_Room
{
	optional int32 id		= 1;
	optional int32 type		= 2;
}

message Notify_Leave_Room
{
	optional int32 id		= 1;
	optional int32 type		= 2;
}

message Room_List
{
	optional int32 id			= 1;
	repeated int32 userList		= 2;
	required int32 roomIndex	= 3;
	optional int32 userCount	= 4;
	optional int32 type			= 5;
}
